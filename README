1、首先考虑项目需要使用的基本依赖或者第三方框架
    1）Butterknife框架----view的依赖注入
    2）retrofit+rxjava+rxandroid的网络请求框架
    3）glide的图片显示框架
    4）其他如gson+desgin+java8等

2、基于MVP的设计模式，严格要求整体项目采用MVP模式开发的

3、创建BaseActivity、BaseFragment、BaseContract等基类，集成众多常用方法，被其他继承，达到减少大量代码的使用

4、LeakCanary
    什么是内存泄漏？
        有些对象只有有限的生命周期。当它们的任务完成以后，它们将会被垃圾回收。如果在对象的生命周期本该结束的时候
        ，这个对象还被一系列引用，这就会导致内存泄漏，随着泄漏的积累，app将消耗完内存。
    leakCanary是Square开源框架，是一个Android和Java的内存泄露检测库，如果检测到某个 activity 有内存泄露，LeakCanary
    就是自动地显示一个通知，所以可以把它理解为傻瓜式的内存泄露检测工具。通过它可以大幅度减少开发中遇到的oom问题，
    大大提高APP的质量。